{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert\\\\Documents\\\\Documents\\\\GitHub\\\\CSNW-Boggle-Interview\\\\app\\\\src\\\\App.js\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App_Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robert Bowen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSNW Interview 2: Boggle Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: \"Given a 4x4 matrix of letters chosen randomly from A-Z (with replacement), and a list L of English words (you can use any words you\\u2019d like); write a program to output all the words present in the matrix per the rules of Boggle. Your program should be able to accept pre-set 4x4 matrices and word lists in a reasonable (text-based) format of your choosing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_c = App_Header;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"app_header\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App_Header\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App_Header","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/Robert/Documents/Documents/GitHub/CSNW-Boggle-Interview/app/src/App.js"],"sourcesContent":["\nimport './App.css';\n\nconst App_Header = () => \n{\n\n  return(\n  <div class = \"header\">\n\n    <h1>Robert Bowen</h1>\n\n    <h2>CSNW Interview 2: Boggle Program</h2>\n\n    <h3>\n    Project Description\n\n    </h3>\n\n    <body>Given a 4x4 matrix of letters chosen randomly from A-Z (with replacement), \n    and a list L of English words (you can use any words youâ€™d like); \n    write a program to output all the words present in the matrix per the rules of Boggle.\n    Your program should be able to accept pre-set 4x4 matrices and word lists in a reasonable (text-based) format of your choosing.\n    </body>\n\n  </div>\n  ); \n\n\n}\n\nfunction App() {\n  \n  return(\n    <div class =\"app\">\n      <h1>hello!!</h1>\n      <app_header/>\n    </div>\n  )\n\n}\n\n\n\n\nexport default App;\n"],"mappings":";AACA,OAAO,WAAW;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAGA,CAAA,KACnB;EAEE,oBACAD,OAAA;IAAKE,KAAK,EAAG,QAAQ;IAAAC,QAAA,gBAEnBH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBP,OAAA;MAAAG,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzCP,OAAA;MAAAG,QAAA,EAAI;IAGJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELP,OAAA;MAAAG,QAAA,EAAM;IAIN;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAIR,CAAC;AAAAC,EAAA,GAzBKP,UAAU;AA2BhB,SAASQ,GAAGA,CAAA,EAAG;EAEb,oBACET,OAAA;IAAKE,KAAK,EAAE,KAAK;IAAAC,QAAA,gBACfH,OAAA;MAAAG,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBP,OAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAGV;AAACG,GAAA,GATQD,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}