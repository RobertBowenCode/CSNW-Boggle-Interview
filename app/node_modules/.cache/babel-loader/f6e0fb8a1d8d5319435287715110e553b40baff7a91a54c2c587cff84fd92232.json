{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert\\\\Documents\\\\Documents\\\\GitHub\\\\CSNW-Boggle-Interview\\\\app\\\\src\\\\components\\\\AppHeader.js\";\nimport '../style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppHeader = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Robert Bowen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CSNW Interview 2: Boggle Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Project Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: \"Given a 4x4 matrix of letters chosen randomly from A-Z (with replacement), and a list L of English words (you can use any words you\\u2019d like); write a program to output all the words present in the matrix per the rules of Boggle. Your program should be able to accept pre-set 4x4 matrices and word lists in a reasonable (text-based) format of your choosing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = AppHeader;\nexport default AppHeader;\nvar _c;\n$RefreshReg$(_c, \"AppHeader\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","AppHeader","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Robert/Documents/Documents/GitHub/CSNW-Boggle-Interview/app/src/components/AppHeader.js"],"sourcesContent":["\r\nimport '../style/App.css';\r\nconst AppHeader = () => \r\n{\r\n\r\n  return(\r\n  <div class = \"header\">\r\n\r\n    <h1>Robert Bowen</h1>\r\n\r\n    <h2>CSNW Interview 2: Boggle Program</h2>\r\n\r\n    <h3>\r\n    Project Description\r\n\r\n    </h3>\r\n\r\n    <body>Given a 4x4 matrix of letters chosen randomly from A-Z (with replacement), \r\n    and a list L of English words (you can use any words youâ€™d like); \r\n    write a program to output all the words present in the matrix per the rules of Boggle.\r\n    Your program should be able to accept pre-set 4x4 matrices and word lists in a reasonable (text-based) format of your choosing.\r\n    </body>\r\n\r\n  </div>\r\n  ); \r\n\r\n\r\n\r\n}\r\n\r\nexport default AppHeader"],"mappings":";AACA,OAAO,kBAAkB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAC1B,MAAMC,SAAS,GAAGA,CAAA,KAClB;EAEE,oBACAD,OAAA;IAAKE,KAAK,EAAG,QAAQ;IAAAC,QAAA,gBAEnBH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBP,OAAA;MAAAG,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzCP,OAAA;MAAAG,QAAA,EAAI;IAGJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELP,OAAA;MAAAG,QAAA,EAAM;IAIN;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAKR,CAAC;AAAAC,EAAA,GA1BKP,SAAS;AA4Bf,eAAeA,SAAS;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}