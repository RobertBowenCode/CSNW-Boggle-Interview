{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert\\\\Documents\\\\Documents\\\\GitHub\\\\CSNW-Boggle-Interview\\\\app\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [wordMatrix, setMatrix] = useState([...Array(4)].map(e => Array(4))); //should create an empty 4 by 4 array.\n  const [isFilled, setIsFilled] = useState(false); //boolean to check that the array is full\n\n  const handleMatrixFill = (row, column, event) => {\n    let result = event.target.value.replace(/[a-z]/gi, ''); //get rid of any non alphabet letters\n\n    if (result.length > 1) {\n      result = result.charAt(0); //make it so it can only be one character long\n    }\n\n    let copy = [...wordMatrix];\n    copy[row][column] = result;\n    setMatrix(copy);\n    let isFilled = true;\n    for (let i = 0; i < 4; i++) {\n      //check if all of the entries are filled. \n      for (let j = 0; j < 4; j++) {\n        if (copy[i][j] == null) {\n          //haven't filled this yet\n          isFilled = false;\n        } else if (copy[i][j].length < 1) {\n          //filled but got rid of letter\n          isFilled = false;\n        }\n      }\n    }\n    setIsFilled(isFilled);\n    console.log(wordMatrix);\n    console.log(isFilled);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WordBoard, {\n      onFill: handleMatrixFill,\n      matrix: wordMatrix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"YaESrU21hFlkcQK4EqZzE4ty2pc=\");\n_c = Game;\nconst WordBoard = _ref => {\n  let {\n    onFill,\n    matrix\n  } = _ref;\n  //this is going to display a board and have functions that will change the state of 2d array in Game component \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => onFill(rowIndex, columnIndex, e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c2 = WordBoard;\nfunction Accordion() {\n  _s2();\n  const [activeIndex, setActiveIndex] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Almaty, Kazakhstan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      title: \"About\",\n      isActive: activeIndex === 0,\n      onShow: () => setActiveIndex(0),\n      children: \"With a population of about 2 million, Almaty is Kazakhstan's largest city. From 1929 to 1997, it was its capital city.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Panel, {\n      title: \"Etymology\",\n      isActive: activeIndex === 1,\n      onShow: () => setActiveIndex(1),\n      children: [\"The name comes from \", /*#__PURE__*/_jsxDEV(\"span\", {\n        lang: \"kk-KZ\",\n        children: \"\\u0430\\u043B\\u043C\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 31\n      }, this), \", the Kazakh word for \\\"apple\\\" and is often translated as \\\"full of apples\\\". In fact, the region surrounding Almaty is thought to be the ancestral home of the apple, and the wild \", /*#__PURE__*/_jsxDEV(\"i\", {\n        lang: \"la\",\n        children: \"Malus sieversii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 238\n      }, this), \" is considered a likely candidate for the ancestor of the modern domestic apple.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s2(Accordion, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n_c3 = Accordion;\nfunction Panel(_ref2) {\n  let {\n    title,\n    children,\n    isActive,\n    onShow\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onShow,\n      children: \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 7\n  }, this);\n}\n\n//export default Game;\n_c4 = Panel;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"WordBoard\");\n$RefreshReg$(_c3, \"Accordion\");\n$RefreshReg$(_c4, \"Panel\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","wordMatrix","setMatrix","Array","map","e","isFilled","setIsFilled","handleMatrixFill","row","column","event","result","target","value","replace","length","charAt","copy","i","j","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","WordBoard","onFill","matrix","_c","_ref","className","rowIndex","columnIndex","type","onChange","_c2","Accordion","_s2","activeIndex","setActiveIndex","Panel","title","isActive","onShow","lang","_c3","_ref2","onClick","_c4","$RefreshReg$"],"sources":["C:/Users/Robert/Documents/Documents/GitHub/CSNW-Boggle-Interview/app/src/components/Game.js"],"sourcesContent":["\r\nimport { useState } from \"react\";\r\n\r\nexport default function Game()\r\n{\r\n\r\n    const [wordMatrix, setMatrix] = useState([...Array(4)].map(e => Array(4)));    //should create an empty 4 by 4 array.\r\n    const [isFilled, setIsFilled] = useState(false);                               //boolean to check that the array is full\r\n\r\n\r\n    const handleMatrixFill = (row, column, event) => {\r\n\r\n        let result = event.target.value.replace(/[a-z]/gi,'') //get rid of any non alphabet letters\r\n\r\n        if(result.length>1)\r\n        {\r\n            result = result.charAt(0) //make it so it can only be one character long\r\n        }\r\n\r\n\r\n        let copy = [...wordMatrix];\r\n        copy[row][column] = result\r\n        setMatrix(copy);\r\n\r\n        let isFilled = true\r\n\r\n\r\n        for(let i =0; i < 4; i++)\r\n        { //check if all of the entries are filled. \r\n            for(let j =0; j < 4; j++)\r\n            {\r\n                if(copy[i][j] == null)\r\n                { //haven't filled this yet\r\n                    isFilled =false\r\n                }\r\n                else if(copy[i][j].length <1)\r\n                { //filled but got rid of letter\r\n                    isFilled = false\r\n                }\r\n\r\n                }\r\n        }\r\n\r\n        setIsFilled(isFilled)\r\n\r\n        console.log(wordMatrix);\r\n        console.log(isFilled); \r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <h1>\r\n            hello!!\r\n        </h1>\r\n        <WordBoard \r\n            onFill ={ handleMatrixFill }\r\n            matrix = {wordMatrix}\r\n         />\r\n    \r\n        </>\r\n\r\n    ); \r\n\r\n\r\n\r\n}\r\n\r\n\r\nconst WordBoard= ({onFill,  matrix})=>\r\n{ //this is going to display a board and have functions that will change the state of 2d array in Game component \r\n\r\n    return(\r\n    <div className=\"Board\">\r\n        <h1>hello2</h1>\r\n        <table>\r\n            <tbody>\r\n            {matrix.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                    {row.map((column, columnIndex) => (\r\n                        <td key={columnIndex}>\r\n                        <input\r\n                        type=\"text\"\r\n                        onChange={(e) => onFill(rowIndex, columnIndex, e)}\r\n                        />\r\n                        </td>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    ); \r\n\r\n\r\n}\r\n\r\n\r\n\r\n function Accordion() {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    return (\r\n      <>\r\n        <h2>Almaty, Kazakhstan</h2>\r\n        <Panel\r\n          title=\"About\"\r\n          isActive={activeIndex === 0}\r\n          onShow={() => setActiveIndex(0)}\r\n        >\r\n          With a population of about 2 million, Almaty is Kazakhstan's largest city. From 1929 to 1997, it was its capital city.\r\n        </Panel>\r\n        <Panel\r\n          title=\"Etymology\"\r\n          isActive={activeIndex === 1}\r\n          onShow={() => setActiveIndex(1)}\r\n        >\r\n          The name comes from <span lang=\"kk-KZ\">алма</span>, the Kazakh word for \"apple\" and is often translated as \"full of apples\". In fact, the region surrounding Almaty is thought to be the ancestral home of the apple, and the wild <i lang=\"la\">Malus sieversii</i> is considered a likely candidate for the ancestor of the modern domestic apple.\r\n        </Panel>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  function Panel({\r\n    title,\r\n    children,\r\n    isActive,\r\n    onShow\r\n  }) {\r\n    return (\r\n      <section className=\"panel\">\r\n        <h3>{title}</h3>\r\n        {isActive ? (\r\n          <p>{children}</p>\r\n        ) : (\r\n          <button onClick={onShow}>\r\n            Show\r\n          </button>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//export default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}